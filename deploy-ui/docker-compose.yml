services:
  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - NODE_ENV=production
    volumes:
      - ./frontend:/app
      - /app/node_modules
    restart: unless-stopped

  # 后端服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ../:/workspace  # 挂载整个项目目录
      - ../deploy:/workspace/deploy  # 单独挂载deploy目录
    restart: unless-stopped

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    command: |
      sh -c '
      cat > /etc/nginx/conf.d/default.conf << EOF
      server {
          listen 80;
          server_name _;
          client_max_body_size 10M;
          
          location / {
              proxy_pass http://frontend:3000;
              proxy_set_header Host \$$host;
              proxy_set_header X-Real-IP \$$remote_addr;
              proxy_set_header X-Forwarded-For \$$proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto \$$scheme;
              proxy_read_timeout 60s;
              proxy_connect_timeout 60s;
              proxy_send_timeout 60s;
          }

          location /api/ {
              proxy_pass http://backend:3001;
              proxy_set_header Host \$$host;
              proxy_set_header X-Real-IP \$$remote_addr;
              proxy_set_header X-Forwarded-For \$$proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto \$$scheme;
              proxy_http_version 1.1;
              proxy_set_header Upgrade \$$http_upgrade;
              proxy_set_header Connection "upgrade";
              proxy_cache_bypass \$$http_upgrade;
              proxy_read_timeout 300s;
              proxy_connect_timeout 75s;
          }
      }
      EOF
      nginx -g "daemon off;"
      '

volumes:
  frontend_node_modules:
  backend_node_modules: